[tool.poetry]
name = "pysdmx"
version = "1.0.0"
description = "Your opinionated Python SDMX library"
authors = [
    "Xavier Sosnovsky <xavier.sosnovsky@bis.org>",
    "Stratos Nikoloutsos <stratos.nikoloutsos@bis.org>",
    "Francisco Javier Hernandez del Caño <javier.hernandez@meaningfuldata.eu>",
    "Mateo de Lorenzo Argelés <mateo.delorenzo@meaningfuldata.eu>"
]
readme = "README.rst"
documentation = "https://bis-med-it.github.io/pysdmx"
keywords = ["sdmx", "data discovery", "data retrieval", "metadata", "fmr"]
repository = "https://github.com/bis-med-it/pysdmx"
license = "Apache-2.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.9"
httpx = "^0.27.0"
msgspec = "0.*"
lxml = {version = "5.*", optional = true}
xmltodict = {version = "0.*", optional = true}
sdmxschemas = {version = "0.2.0", optional = true}
python-dateutil = {version = "^2.9.0.post0", optional = true}
parsy = "^2.1"
pandas = {version = "^2.2.2", optional = true}

[tool.poetry.extras]
dc = ["python-dateutil"]
xml = ["lxml", "xmltodict", "sdmxschemas"]
data = ["pandas"]
all = ["lxml", "xmltodict", "sdmxschemas", "pandas", "python-dateutil"]

[tool.poetry.group.dev.dependencies]
darglint = "^1.8.1"
ruff = "^0.8.1"
mypy = "^1.1.1"
pytest = "^8.3.2"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.0.0"
respx = "^0.20.2"
pyroma = "^4.2"
lxml-stubs = "^0.5.1"
types-xmltodict = "^0.13.0.3"
types-python-dateutil = "^2.9.0.20240316"
pandas-stubs = "^2.2.2.240603"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
lint.select = [
    "B","B9","C","C4","D","E","F","I","PT","S","SIM","W"
]
lint.ignore = [
    "E203","D411","F901","S320"
]
lint.mccabe.max-complexity = 10
lint.pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101","S311","D100","D103","D104"]

[tool.mypy]
files = "src"
disallow_untyped_defs = true
disallow_untyped_calls = true
ignore_errors = false
no_implicit_optional = true
show_column_numbers = true
strict_equality = true
strict_optional = true
strict = true
enable_error_code = [
    "redundant-expr",
    "truthy-bool",
]
warn_return_any = false

[tool.coverage.run]
branch = true
omit = [
    # We cannot test this properly with pytest as we always install all extras
    "__extras_check.py"
]
