name: Extra

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.os }} • py${{ matrix.python-version }} • extra:${{ matrix.extra }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]
        extra: [none, data, xml, vtl]
        include:
          - extra: none
            marker: model and api
            extras_to_install: ""
          - extra: data
            marker: data
            extras_to_install: "data"
          - extra: xml
            marker: xml
            extras_to_install: "xml data"
          - extra: vtl
            marker: vtl
            extras_to_install: "vtl"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Install deps (${{ matrix.extras_to_install }}) — synced
        shell: bash
        run: |
          set -euo pipefail
          EXTRAS_FLAGS=""
          if [ -n "${{ matrix.extras_to_install }}" ]; then
            for e in ${{ matrix.extras_to_install }}; do
              EXTRAS_FLAGS="$EXTRAS_FLAGS -E $e"
            done
          fi
          poetry install --no-interaction --only main --sync $EXTRAS_FLAGS

      - name: Verify only requested extras are installed
        shell: bash
        run: |
          set -euo pipefail

          EXTRAS_FLAGS=""
          if [ -n "${{ matrix.extras_to_install }}" ]; then
            for e in ${{ matrix.extras_to_install }}; do
              EXTRAS_FLAGS="$EXTRAS_FLAGS -E $e"
            done
          fi

          norm_names() { awk '{print tolower($1)}' | sed 's/\[.*\]//' | sort -u; }
          norm_freeze() { awk -F'[=]' '{print tolower($1)}' | sed 's/\[.*\]//' | sort -u; }

          expected=$(
            poetry show --only main --tree $EXTRAS_FLAGS \
              | sed -E 's/^[├└─┬ │]+//' \
              | sed -E 's/ +[>=<].*$//' \
              | grep -E '^[a-zA-Z0-9._-]+' \
              | norm_names \
              || true
          )

          installed=$(poetry run python -m pip list --format=freeze | norm_freeze)

          ALLOW_RE='^(pip|setuptools|wheel)$'
          PROJECT_NAME=$(poetry version | awk '{print $1}' | tr '[:upper:]' '[:lower:]')

          unexpected=$(
            comm -13 <(echo "$expected") <(echo "$installed") \
              | grep -Ev "$ALLOW_RE" \
              | grep -Ev "^${PROJECT_NAME}$" \
              || true
          )

          if [ -n "$unexpected" ]; then
            echo "❌ Packages not expected for extras='${{ matrix.extras_to_install }}':"
            echo "$unexpected"
            exit 1
          fi

          echo "✅ OK: env matches main + '${{ matrix.extras_to_install }}'"

      - name: Run tests (${{ matrix.marker }})
        run: poetry run pytest -m "${{ matrix.marker }}" --cov=pysdmx --cov-branch



