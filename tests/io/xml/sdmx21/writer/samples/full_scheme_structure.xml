<?xml version="1.0" encoding="UTF-8"?>
<mes:Structure xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mes="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message" xmlns:str="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/structure" xmlns:com="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/common" xsi:schemaLocation="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/message https://registry.sdmx.org/schemas/v2_1/SDMXMessage.xsd">
	<mes:Header>
		<mes:ID>ID</mes:ID>
		<mes:Test>true</mes:Test>
		<mes:Prepared>2021-01-01T00:00:00</mes:Prepared>
		<mes:Sender id="ZZZ"/>
		<mes:Receiver id="Not_Supplied"/>
		<mes:Source>PySDMX</mes:Source>
	</mes:Header>
	<mes:Structures>
		<str:Rulesets>
			<str:RulesetScheme id="TEST_RULESET_SCHEME" urn="urn:sdmx:org.sdmx.infomodel.transformation.RulesetScheme=MD:TEST_RULESET_SCHEME(1.0)" version="1.0" isExternalReference="false" isFinal="false" agencyID="MD"  vtlVersion="2.0">
				<com:Name xml:lang="en">Testing Ruleset Scheme</com:Name>
				&lt;str:Ruleset id="TEST_DATAPOINT_RULESET" urn="urn:sdmx:org.sdmx.infomodel.transformation.Ruleset=MD:TEST_RULESET_SCHEME(1.0).TEST_DATAPOINT_RULESET" rulesetScope="variable" rulesetType="datapoint"&gt;
					&lt;com:Name xml:lang="en"&gt;Testing Datapoint Ruleset&lt;/com:Name&gt;
					&lt;str:RulesetDefinition&gt;define datapoint ruleset signValidation (variable ACCOUNTING_ENTRY as AE, INT_ACC_ITEM as IAI,                 FUNCTIONAL_CAT as FC, INSTR_ASSET as IA, OBS_VALUE as O) is      sign1c: when AE = "C" and IAI = "G" then O &gt; 0 errorcode "sign1c" errorlevel 1;     end datapoint ruleset;&lt;/str:RulesetDefinition&gt;
				&lt;/str:Ruleset&gt;
			</str:RulesetScheme>
		</str:Rulesets>
		<str:Transformations>
			<str:TransformationScheme id="TEST_TS" urn="urn:sdmx:org.sdmx.infomodel.transformation.TransformationScheme=MD:TEST_TS(1.0)" version="1.0" isExternalReference="false" isFinal="false" agencyID="MD"  vtlVersion="2.0">
				<com:Name xml:lang="en">Testing TS</com:Name>
				&lt;str:Transformation id="TEST_Tr" urn="urn:sdmx:org.sdmx.infomodel.transformation.Transformation=MD:TEST_TS(1.0).TEST_Tr" isPersistent="false"&gt;
					&lt;com:Name xml:lang="en"&gt;Testing Transformation&lt;/com:Name&gt;
					&lt;str:Expression&gt;sum(             BIS_LOC_STATS              group by REP_COUNTRY,COUNT_SECTOR,REF_DATE)&lt;/str:Expression&gt;
					&lt;str:Result&gt;aggr.agg1&lt;/str:Result&gt;
				&lt;/str:Transformation&gt;
				&lt;str:RulesetScheme&gt;
					&lt;Ref package="transformation" agencyID="MD" id="TEST_RULESET_SCHEME" version="1.0" class="RulesetScheme"/&gt;
				&lt;/str:RulesetScheme&gt;
				&lt;str:UserDefinedOperatorScheme&gt;
					&lt;Ref package="transformation" agencyID="MD" id="TEST_UDO_SCHEME" version="1.0" class="UserDefinedOperatorScheme"/&gt;
				&lt;/str:UserDefinedOperatorScheme&gt;
			</str:TransformationScheme>
		</str:Transformations>
		<str:UserDefinedOperators>
			<str:UserDefinedOperatorScheme id="TEST_UDO_SCHEME" urn="urn:sdmx:org.sdmx.infomodel.transformation.UserDefinedOperatorScheme=MD:TEST_UDO_SCHEME(1.0)" version="1.0" isExternalReference="false" isFinal="false" agencyID="MD"  vtlVersion="2.0">
				<com:Name xml:lang="en">Testing UDO Scheme</com:Name>
				&lt;str:UserDefinedOperator id="TEST_UDO" urn="urn:sdmx:org.sdmx.infomodel.transformation.UserDefinedOperator=MD:TEST_UDO_SCHEME(1.0).TEST_UDO"&gt;
					&lt;com:Name xml:lang="en"&gt;UDO Testing&lt;/com:Name&gt;
					&lt;str:OperatorDefinition&gt;define operator filter_ds (ds1 dataset, great_cons string default "1", less_cons number default 4.0)   returns dataset is     ds1[filter Me_1 &gt; great_cons and Me_2 &lt; less_cons] end operator;&lt;/str:OperatorDefinition&gt;
				&lt;/str:UserDefinedOperator&gt;
				&lt;str:RulesetScheme&gt;
					&lt;Ref package="transformation" agencyID="MD" id="TEST_RULESET_SCHEME" version="1.0" class="RulesetScheme"/&gt;
				&lt;/str:RulesetScheme&gt;
				&lt;str:RulesetScheme&gt;
					&lt;Ref package="transformation" agencyID="MD" id="TEST_RULESET_SCHEME" version="1.0" class="RulesetScheme"/&gt;
				&lt;/str:RulesetScheme&gt;
			</str:UserDefinedOperatorScheme>
		</str:UserDefinedOperators>
	</mes:Structures>
</mes:Structure>